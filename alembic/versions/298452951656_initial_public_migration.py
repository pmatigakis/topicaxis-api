"""Initial public migration

Revision ID: 298452951656
Revises: 
Create Date: 2024-02-16 19:42:40.906390

"""
from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "298452951656"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "articles",
        sa.Column("id", sa.String(length=40), nullable=False),
        sa.Column("url", sa.Text(), nullable=False),
        sa.Column("title", sa.Text(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("image", sa.Text(), nullable=True),
        sa.Column("summary", sa.Text(), nullable=True),
        sa.Column(
            "source", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column(
            "categories",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=False,
        ),
        sa.Column(
            "tags", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column(
            "channels", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column(
            "keywords", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column(
            "named_entities",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=False,
        ),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="pk_articles_id"),
    )
    op.create_index(
        "ix_articles_categories",
        "articles",
        ["categories"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        "ix_articles_channels",
        "articles",
        ["channels"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        "ix_articles_source",
        "articles",
        ["source"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        "ix_articles_summary_tsv",
        "articles",
        [sa.text("to_tsvector('english', summary)")],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        "ix_articles_tags",
        "articles",
        ["tags"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        "ix_articles_title_tsv",
        "articles",
        [sa.text("to_tsvector('english', title)")],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        "ix_articles_updated_at_id_desc",
        "articles",
        [sa.text("updated_at DESC"), sa.text("id DESC")],
        unique=False,
    )
    op.create_table(
        "categories",
        sa.Column("id", sa.String(length=40), nullable=False),
        sa.Column("name", sa.String(length=40), nullable=False),
        sa.Column(
            "taxonomy", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.PrimaryKeyConstraint("id", name="pk_categories_id"),
    )
    op.create_table(
        "channels",
        sa.Column("id", sa.String(length=40), nullable=False),
        sa.Column("name", sa.String(length=40), nullable=False),
        sa.Column("url", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("id", name="pk_channels_id"),
    )
    op.create_table(
        "sources",
        sa.Column("id", sa.String(length=40), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("url", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("id", name="pk_sources_id"),
    )
    op.create_index("ix_sources_name", "sources", ["name"], unique=False)
    op.create_table(
        "tags",
        sa.Column("id", sa.String(length=40), nullable=False),
        sa.Column("name", sa.String(length=40), nullable=False),
        sa.PrimaryKeyConstraint("id", name="pk_tags_id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=40), nullable=False),
        sa.Column("api_key", sa.String(length=40), nullable=False),
        sa.PrimaryKeyConstraint("id", name="pk_users_id"),
        sa.UniqueConstraint("api_key", name="uq_users_api_key"),
        sa.UniqueConstraint("username", name="uq_users_username"),
    )
    op.create_index("ix_users_api_key", "users", ["api_key"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_users_api_key", table_name="users")
    op.drop_table("users")
    op.drop_table("tags")
    op.drop_index("ix_sources_name", table_name="sources")
    op.drop_table("sources")
    op.drop_table("channels")
    op.drop_table("categories")
    op.drop_index("ix_articles_updated_at_id_desc", table_name="articles")
    op.drop_index(
        "ix_articles_title_tsv", table_name="articles", postgresql_using="gin"
    )
    op.drop_index(
        "ix_articles_tags", table_name="articles", postgresql_using="gin"
    )
    op.drop_index(
        "ix_articles_summary_tsv",
        table_name="articles",
        postgresql_using="gin",
    )
    op.drop_index(
        "ix_articles_source", table_name="articles", postgresql_using="gin"
    )
    op.drop_index(
        "ix_articles_channels", table_name="articles", postgresql_using="gin"
    )
    op.drop_index(
        "ix_articles_categories", table_name="articles", postgresql_using="gin"
    )
    op.drop_table("articles")
    # ### end Alembic commands ###
